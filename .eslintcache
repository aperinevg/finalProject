[{"G:\\Code\\Project\\finalProject\\first\\src\\index.js":"1","G:\\Code\\Project\\finalProject\\first\\src\\App.js":"2","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\MainPage.jsx":"3","G:\\Code\\Project\\finalProject\\first\\src\\components\\Navbar\\Navbar.jsx":"4","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\PiePage.jsx":"5","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\InputForPie\\InputForPie.jsx":"6","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\InputForPie\\Item.jsx":"7","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\Chart\\PieChart.jsx":"8","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\PiePageTotal.jsx":"9"},{"size":435,"mtime":1607684662000,"results":"10","hashOfConfig":"11"},{"size":488,"mtime":1610459168131,"results":"12","hashOfConfig":"11"},{"size":4659,"mtime":1610462584279,"results":"13","hashOfConfig":"11"},{"size":495,"mtime":1608813663333,"results":"14","hashOfConfig":"11"},{"size":1310,"mtime":1610462155773,"results":"15","hashOfConfig":"11"},{"size":1106,"mtime":1608377531867,"results":"16","hashOfConfig":"11"},{"size":639,"mtime":1610461854353,"results":"17","hashOfConfig":"11"},{"size":821,"mtime":1607791006256,"results":"18","hashOfConfig":"11"},{"size":1429,"mtime":1608807897670,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yb0t2q",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},"G:\\Code\\Project\\finalProject\\first\\src\\index.js",[],"G:\\Code\\Project\\finalProject\\first\\src\\App.js",[],"G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\MainPage.jsx",[],"G:\\Code\\Project\\finalProject\\first\\src\\components\\Navbar\\Navbar.jsx",[],"G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\PiePage.jsx",[],["41","42"],"G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\InputForPie\\InputForPie.jsx",["43","44"],"import React from 'react';\nimport  style from '../PiePage.module.css'\n\n\n\n\n\n\nconst InputForPie = props => {\n\n    const type = props.type;\n  \n\n    let newLabelElem = React.createRef();\n    let newNumElem = React.createRef();\n\n    const addLabel = () => {\n      let text = newLabelElem.current.value;\n      let num = +newNumElem.current.value;\n      if( text && num ){\n      props.addElement(text,num, type);\n      newLabelElem.current.value='';\n      newNumElem.current.value='';\n      }      \n    }\n    const save = () =>{\n      props.saveData(type);\n    }\n\n\n    return (\n     \n        <div className={style.input}>\n          <div className={style.inputForm}>\n            <input className={style.inputData} ref={newLabelElem} type=\"text\" placeholder=\"purchase\"/>\n            <input className={style.inputData} ref={newNumElem} type=\"text\" placeholder=\"cost\"/>\n          </div>\n          \n\n          <a className={style.inputButton} onClick={addLabel} >Add</a>\n          <a className={style.inputButton} onClick={save} >Save</a>\n\n\n        </div>\n                \n      \n    );\n}\n\nexport default InputForPie; ","G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\InputForPie\\Item.jsx",[],"G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\Chart\\PieChart.jsx",[],"G:\\Code\\Project\\finalProject\\first\\src\\components\\MainPage\\PiePage\\PiePageTotal.jsx",["45","46"],"import  style from './PiePage.module.css';\nimport InputForPie from './InputForPie/InputForPie';\nimport PieChart from './Chart/PieChart';\nimport Item from './InputForPie/Item';\n\n\n\nconst PiePageTotal = props => {\n\n    \n  const totalExpenses = Math.round(props.dataExpenses.reduce((acc, val) => acc + val, 0)*10)/10;\n  const totalIncome = Math.round(props.dataIncome.reduce((acc, val) => acc + val, 0)*10)/10;\n\n  const total = {\n    lables: [\"Expenses\", \"Income\"],\n    data:[totalExpenses, totalIncome]\n  }\n  \n    \n \n\n    return (\n        <div className={style.container}>\n            <h3 className={style.titleTotal}>{props.title}</h3>\n            <div className={style.piePage} >\n                        \n                <div className= {style.historyTotal}>\n                  <div className= {style.historyTotalText}>\n                    <p className={style.historyTotalTitle}>Total Income</p>\n                    {totalIncome + \" руб\"}\n                  </div>\n                  <div className= {style.historyTotalText}>\n                    <p className={style.historyTotalTitle}>Total Expenses</p>\n                    {totalExpenses + \" руб\"}\n                  </div>\n                  \n                  \n                </div>\n               \n                      \n            \n              <PieChart  lables={total.lables} data={total.data}/>\n            </div>\n        </div>\n    );\n}\n\nexport default PiePageTotal; ",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":40,"column":11,"nodeType":"53","endLine":40,"endColumn":64},{"ruleId":"51","severity":1,"message":"52","line":41,"column":11,"nodeType":"53","endLine":41,"endColumn":60},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":12},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'InputForPie' is defined but never used.","Identifier","unusedVar","'Item' is defined but never used.","no-global-assign","no-unsafe-negation"]